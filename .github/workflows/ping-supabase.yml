name: Ping Supabase

on:
  schedule:
    # Exécute toutes les 5 minutes
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Check Supabase health
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          echo "Vérification de la santé de Supabase..."
          
          # Essayer d'abord la fonction RPC personnalisée
          RPC_RESPONSE=$(curl -s -X POST "$SUPABASE_URL/rest/v1/rpc/get_current_timestamp" \
            -H "apikey: $SUPABASE_KEY" \
            -H "Authorization: Bearer $SUPABASE_KEY" \
            -H "Content-Type: application/json")
          
          # Vérifier si la réponse est valide (contient une date)
          if [[ "$RPC_RESPONSE" =~ [0-9]{4}-[0-9]{2}-[0-9]{2} ]]; then
            echo "✅ Succès! Fonction RPC accessible."
            echo "Timestamp actuel: $RPC_RESPONSE"
            exit 0
          fi
          
          echo "La fonction RPC n'est pas disponible. Essai de la méthode authentification..."
          
          # Essayer avec une requête d'authentification
          AUTH_RESPONSE=$(curl -s -X GET "$SUPABASE_URL/auth/v1/user" \
            -H "apikey: $SUPABASE_KEY" \
            -H "Authorization: Bearer $SUPABASE_KEY")
          
          # Même si l'authentification échoue avec une erreur 401, cela signifie que le service est disponible
          if [[ "$AUTH_RESPONSE" == *"message"* ]]; then
            echo "✅ Succès! Service d'authentification accessible."
            echo "Réponse: $AUTH_RESPONSE"
            exit 0
          fi
          
          echo "❌ Échec de la vérification de santé de Supabase"
          echo "Dernière réponse: $AUTH_RESPONSE"
          exit 1
